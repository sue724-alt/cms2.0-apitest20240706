{"uid":"1e35d12d7d3f16c3","name":"清除历史数据","fullName":"testcase.7_HistoryManagement.test_history.TestCreat#test_clear_historical_data2","historyId":"98c1edf45a5ca415e4d12fe5e85966ad","time":{"start":1705415484986,"stop":1705415488118,"duration":3132},"description":"清除历史数据","descriptionHtml":"<p>清除历史数据</p>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"clear_extract","time":{"start":1705414834841,"stop":1705414834841,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"description":"清除历史数据","status":"passed","steps":[],"attachments":[{"uid":"7fd261a00a5605f8","name":"log","source":"7fd261a00a5605f8.txt","type":"text/plain","size":732}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false},"afterStages":[],"labels":[{"name":"story","value":"接口名称：清除历史数据2"},{"name":"epic","value":"CMS2.0"},{"name":"feature","value":"历史管理"},{"name":"parentSuite","value":"testcase.7_HistoryManagement"},{"name":"suite","value":"test_history"},{"name":"subSuite","value":"TestCreat"},{"name":"host","value":"DESKTOP-3IO13CK"},{"name":"thread","value":"31960-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.7_HistoryManagement.test_history"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"caseinfo","value":"{'name': '清除历史数据', 'base_url': '${get_base_url(cms_url)}', 'request': {'url': '/api/v1/historicarchive/group/${get_extract_data(history_group_id)}/cleanup', 'method': 'get', 'headers': {'X-Project': '${get_extract_data(x_project)}'}}, 'validate': [{'equals': {'status_code': 200}}]}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":[]},"source":"1e35d12d7d3f16c3.json","parameterValues":["{'name': '清除历史数据', 'base_url': '${get_base_url(cms_url)}', 'request': {'url': '/api/v1/historicarchive/group/${get_extract_data(history_group_id)}/cleanup', 'method': 'get', 'headers': {'X-Project': '${get_extract_data(x_project)}'}}, 'validate': [{'equals': {'status_code': 200}}]}"]}