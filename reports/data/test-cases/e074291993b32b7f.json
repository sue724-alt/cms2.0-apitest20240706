{"uid":"e074291993b32b7f","name":"获取通道信息","fullName":"testcase.3_VariableManagement.test_variable_run.TestCreat#test_get_protocol_info","historyId":"b1a07f50f410be4862fcc63195f97ddd","time":{"start":1705414893235,"stop":1705414893254,"duration":19},"description":"获取通道信息","descriptionHtml":"<p>获取通道信息</p>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"clear_extract","time":{"start":1705414834841,"stop":1705414834841,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"description":"获取通道信息","status":"passed","steps":[],"attachments":[{"uid":"44072bdf097740ae","name":"log","source":"44072bdf097740ae.txt","type":"text/plain","size":109508}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false},"afterStages":[],"labels":[{"name":"story","value":"接口名称：获取协议信息"},{"name":"epic","value":"CMS2.0"},{"name":"feature","value":"变量管理"},{"name":"parentSuite","value":"testcase.3_VariableManagement"},{"name":"suite","value":"test_variable_run"},{"name":"subSuite","value":"TestCreat"},{"name":"host","value":"DESKTOP-3IO13CK"},{"name":"thread","value":"31960-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.3_VariableManagement.test_variable_run"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"caseinfo","value":"{'name': '获取通道信息', 'base_url': '${get_base_url(cms_url)}', 'request': {'url': '/api/v1/variable/tunnel/io/protocol', 'method': 'get', 'headers': {'X-Project': '${get_extract_data(x_project)}'}}, 'validate': [{'equals': {'status_code': 200}}, {'contains': 'tree'}]}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":[]},"source":"e074291993b32b7f.json","parameterValues":["{'name': '获取通道信息', 'base_url': '${get_base_url(cms_url)}', 'request': {'url': '/api/v1/variable/tunnel/io/protocol', 'method': 'get', 'headers': {'X-Project': '${get_extract_data(x_project)}'}}, 'validate': [{'equals': {'status_code': 200}}, {'contains': 'tree'}]}"]}